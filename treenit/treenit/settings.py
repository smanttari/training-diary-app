"""
Django settings for treenit project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ['DEBUG']


ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'treenipaivakirja',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'treenit.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'treenit.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'treenit.sqlite3'),
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'fi-FI'

TIME_ZONE = 'Europe/Helsinki'

USE_I18N = True

USE_L10N = True

USE_THOUSAND_SEPARATOR = True

USE_TZ = False

SHORT_DATETIME_FORMAT = '%d.%m.%Y'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'index'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters':{
		'file':{
			'format':'{asctime} {levelname} {module} {process:d} {thread:d} {message}',
            'datefmt' : '[%Y-%m-%d %H:%M:%S]',
            'style': '{',
		}
	},
    'handlers': {
        'file_debug': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes' : 100000000,
            'backupCount' : 3,
            'filename': os.path.join(BASE_DIR,'debug.log'),
            'formatter': 'file',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file_debug'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.utils.autoreload': {
            'level': 'INFO',
        }
    },
}

# Polar Accesslink
ACCESSLINK_URL = 'https://www.polaraccesslink.com/v3'
ACCESSLINK_AUTH_URL = 'https://flow.polar.com/oauth2/authorization'
ACCESSLINK_ACCESS_TOKEN_URL = 'https://polarremote.com/v2/oauth2/token'
try:
    ACCESSLINK_CLIENT_KEY = os.environ['ACCESSLINK_CLIENT_KEY']
    ACCESSLINK_CLIENT_SECRET = os.environ['ACCESSLINK_CLIENT_SECRET']
except KeyError:
    ACCESSLINK_CLIENT_KEY = None
    ACCESSLINK_CLIENT_SECRET = None

# Oura
OURA_URL = 'https://api.ouraring.com/v2/usercollection'
OURA_AUTH_URL = 'https://cloud.ouraring.com/oauth/authorize'
OURA_ACCESS_TOKEN_URL = 'https://api.ouraring.com/oauth/token'
try:
    OURA_CLIENT_KEY = os.environ['OURA_CLIENT_KEY']
    OURA_CLIENT_SECRET = os.environ['OURA_CLIENT_SECRET']
except KeyError:
    OURA_CLIENT_KEY = None
    OURA_CLIENT_SECRET = None


# Media
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')